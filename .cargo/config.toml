# Building for our custom target which does not have an operating system,
# so the linker does not try and link against the C runtime
[build]
target = "x86_64-rust_os.json"

# Compiles "core", "compiler_builtins" and "alloc" for our custom target
# and enables memory functions from compiler_builtins to replace
# the ones from the C standard libary which we do not have access to
[unstable]
build-std = ["core", "compiler_builtins", "alloc"]
build-std-features = ["compiler-builtins-mem"]

# This will run the resulting bootable image over QEMU when "cargo run" is invoked
[target.'cfg(target_os = "none")']
runner = "bootimage runner"
